pipeline {
    agent any
   environment {
        AZURE_CLIENT_ID = credentials('azure-client-id')
        AZURE_TENANT_ID = credentials('azure-tenant-id')
        AZURE_OBJECT_ID = credentials('azure-object-id')
        AZURE_SECRET_ID = credentials('azure-secret-id')
    }
    
    stages {
        stage('Build') {
            steps {
                // Checkout source code from version control
                git 'https://github.com/your/repository.git'
                
                // Build Java application using Maven
                sh 'mvn clean package'
            }
        }
        
        stage('Docker Build') {
            steps {
                // Build Docker image using Dockerfile
                sh 'docker build -t your-image-name .'
            }
        }
        
        stage('Terraform Apply') {
            steps {
                // Checkout Terraform configurations from version control
                git 'https://github.com/your/terraform-repo.git'
                
                // Initialize Terraform
                sh 'terraform init'
                
                // Apply Terraform configurations to create infrastructure
                sh 'terraform apply -auto-approve'
            }
        }
        
        stage('Deploy') {
            steps {
                // Copy the built package to the VM
                sh 'scp target/your-application.jar user@vm-ip:/path/to/deployment/'
                
                // SSH into the VM and deploy the package
                sh 'ssh user@vm-ip "sudo systemctl stop your-application"'
                sh 'ssh user@vm-ip "sudo cp /path/to/deployment/your-application.jar /opt/your-application/"'
                sh 'ssh user@vm-ip "sudo systemctl start your-application"'
            }
        }
    }
}





